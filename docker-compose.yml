version: "3.8"

services:
  # Service untuk Aplikasi Node.js Anda
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      # Mapping port container 3000 ke port 8080 di VPS
      - "8080:3000"
    environment:
      # Variabel ini akan diambil dari file .env.production
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy

  # Service untuk Database PostgreSQL
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      # Variabel ini juga diambil dari file .env.production
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      # Menyimpan data database secara permanen
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Memastikan database siap sebelum aplikasi dimulai
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  # Mendefinisikan volume yang akan digunakan oleh service 'db'
  postgres_data:
